-- -------------------------------------------------------------
-- 
-- File Name: C:\projects\Matlab_Projects\codegen\wmhdlc\hdlsrc\wmhdlc_fixpt.vhd
-- Created: 2023-02-27 13:27:24
-- 
-- Generated by MATLAB 9.13, MATLAB Coder 5.5 and HDL Coder 4.0
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- y_out                         ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: wmhdlc_fixpt
-- Source Path: wmhdlc_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY wmhdlc_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        x_in                              :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14
        window_in                         :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En13
        ce_out                            :   OUT   std_logic;
        y_out                             :   OUT   std_logic_vector(13 DOWNTO 0)  -- sfix14
        );
END wmhdlc_fixpt;


ARCHITECTURE rtl OF wmhdlc_fixpt IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL x_in_signed                      : signed(13 DOWNTO 0);  -- sfix14
  SIGNAL x_in_1                           : signed(13 DOWNTO 0);  -- sfix14
  SIGNAL window_in_unsigned               : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL window_in_1                      : unsigned(13 DOWNTO 0);  -- ufix14_En13
  SIGNAL multiplier_cast                  : signed(14 DOWNTO 0);  -- sfix15_En13
  SIGNAL multiplier_mul_temp              : signed(28 DOWNTO 0);  -- sfix29_En13
  SIGNAL tmp                              : signed(27 DOWNTO 0);  -- sfix28_En13
  SIGNAL tmp_1                            : signed(13 DOWNTO 0);  -- sfix14
  SIGNAL y_out_tmp                        : signed(13 DOWNTO 0);  -- sfix14

BEGIN
  x_in_signed <= signed(x_in);

  enb <= clk_enable;

  x_in_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      x_in_1 <= to_signed(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        x_in_1 <= x_in_signed;
      END IF;
    END IF;
  END PROCESS x_in_reg_process;


  window_in_unsigned <= unsigned(window_in);

  window_in_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      window_in_1 <= to_unsigned(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        window_in_1 <= window_in_unsigned;
      END IF;
    END IF;
  END PROCESS window_in_reg_process;


  -- HDL code generation from MATLAB function: wmhdlc_fixpt
  -- MATLAB design: window mult
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  --                                                                          %
  --          Generated by MATLAB 9.13 and Fixed-Point Designer 7.5           %
  --                                                                          %
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  multiplier_cast <= signed(resize(window_in_1, 15));
  multiplier_mul_temp <= x_in_1 * multiplier_cast;
  tmp <= multiplier_mul_temp(27 DOWNTO 0);

  tmp_1 <= tmp(26 DOWNTO 13);

  y_out_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      y_out_tmp <= to_signed(16#0000#, 14);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        y_out_tmp <= tmp_1;
      END IF;
    END IF;
  END PROCESS y_out_reg_process;


  y_out <= std_logic_vector(y_out_tmp);

  ce_out <= clk_enable;

END rtl;

